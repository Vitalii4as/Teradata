import { TeradataConnection } from './teradata-connection';
export declare class TeradataCursor {
    private desc;
    private rowCount;
    private arraySize;
    private rowNumber;
    private conn;
    private uRowsHand;
    private rowTerminator;
    private rowTerminatorTA;
    private abyBindValues;
    private lib;
    private ref;
    private byteArray;
    private logger;
    constructor(connection: TeradataConnection, ffiLib: any, ffiRef: any, ffiByteArray: any);
    get description(): any[];
    get rowcount(): number;
    get rownumber(): number;
    get connection(): TeradataConnection;
    get uRowsHandle(): number;
    callproc(procname: string, parameters?: any[]): void;
    close(): void;
    execute(operation: string, parameters?: any[]): void;
    executemany(procname: string, seqOfParameters: any[]): void;
    fetchone(): any[];
    fetchmany(nDesiredRowCount?: number): any[];
    fetchall(): any[];
    nextset(): boolean;
    setinputsizes(sizes: number): void;
    setoutputsize(size: number, column: number): void;
    next(): any[];
    private _obtainResultMetaData;
    private deserializeBool;
    private deserializeBytes;
    private deserializeCharacterValue;
    private deserializeDate;
    private deserializeDouble;
    private deserializeInt;
    private deserializeLong;
    private deserializeNull;
    private deserializeNumber;
    private deserializeString;
    private deserializeTime;
    private deserializeTimeWithTimeZone;
    private deserializeTimestamp;
    private deserializeTimestampWithTimeZone;
    private serializeBytes;
    private serializeCharacterValue;
    private serializeDate;
    private serializeNull;
    private serializeNumber;
    private serializeString;
}
